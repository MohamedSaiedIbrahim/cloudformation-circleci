version: 2.1

jobs:
  provision-infrastructure:
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: "Provision Infrastructure using CloudFormation"
          command: |
            yum install -y tar gzip
            aws cloudformation deploy --template-file ec2.yml --stack-name web --region us-east-1
            echo "[web]" > inventory.txt
            aws ec2 describe-instances --region us-east-1 --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory.txt
      - persist_to_workspace:
          root: .
          paths:
            - inventory.txt
  server-configuration:
    docker:
      - image: python:3.11.0rc1-alpine3.16
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: |
            apk add ansible gzip openssh-client
      - run:
          name: "Install Dependencies"
          command: |
            apk add ansible gzip openssh-client
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints: ["54:03:09:2e:fd:b3:04:d1:99:84:99:a1:fd:4a:41:06"]
      - run:
          name: "Install Dependencies"
          command: |
            ls ~/.ssh
            apk add ansible gzip openssh-client
      - run:
          name: "Server configuration using ansible"
          command: |
            ansible-playbook -i inventory.txt main.yml --key ~/.ssh/id_rsa_5403092efdb304d1998499a1fd4a4106

workflows:
  welcome:
    jobs:
      - provision-infrastructure
      - server-configuration:
          requires: 
            - provision-infrastructure